async def show_variants(callback, response):
    for sight in response['results']:
        reply = f'‚ú® {sight["name"]}\n\n'
        reply += f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {sight["categories"][0]["name"]}\n\n'
        reply += f'–ê–¥—Ä–µ—Å: {sight["location"]["formatted_address"]}\n\n'

        if 'description' in sight and sight['description']:
            reply += f'–û–ø–∏—Å–∞–Ω–∏–µ: {sight["description"]}\n\n'

        if 'rating' in sight and sight['rating']:
            reply += f'‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {sight["rating"]}/10\n'

        if 'price' in sight and sight['price']:
            reply += f'üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {price_to_string(sight["price"])}\n'

        if 'hours' in sight and sight['hours'] and 'regular' in sight['hours'] and sight['hours']['regular']:
            for hour in sight['hours']['regular']:
                day = day_to_week(hour["day"])

                if day:
                    reply += f'üïí <b>{day_to_week(hour["day"])}</b> {hour["open"][:2]}:{hour["open"][2:]} - {hour["close"][:2]}:{hour["close"][2:]}\n'

        if 'tel' in sight and sight['tel']:
            reply += f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: {sight["tel"]}\n\n'

        if 'website' in sight and sight['website']:
            reply += f'üåê –°–∞–∏ÃÜ—Ç: {sight["website"]}\n\n'

        reply += f'–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ {sight["distance"]} –º–µ—Ç—Ä–∞—Ö –æ—Ç –ª–æ–∫–∞—Ü–∏–∏\n'

        await callback.message.answer(
            text=reply,
            parse_mode='HTML'
        )

        await callback.message.answer_location(
            latitude=sight['geocodes']['main']['latitude'],
            longitude=sight['geocodes']['main']['longitude'])

    await callback.answer()


def day_to_week(day: int):
    if day == 0:
        return '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
    if day == 1:
        return '–í—Ç–æ—Ä–Ω–∏–∫'
    if day == 2:
        return '–°—Ä–µ–¥–∞'
    if day == 3:
        return '–ß–µ—Ç–≤–µ—Ä–≥'
    if day == 4:
        return '–ü—è—Ç–Ω–∏—Ü–∞'
    if day == 5:
        return '–°—É–±–±–æ—Ç–∞'
    if day == 6:
        return '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'


def price_to_string(price_type: int):
    if price_type == 1:
        return '–î–µ—à–µ–≤–æ'
    if price_type == 2:
        return '–°—Ä–µ–¥–Ω–µ'
    if price_type == 3:
        return '–î–æ—Ä–æ–≥–æ'
    if price_type == 4:
        return '–°—É–ø–µ—Ä –¥–æ—Ä–æ–≥–æ'
